name: Build Application
on:
  workflow_call:
    inputs:
      MELI_SITE:
        required: true
        type: string
    secrets:
      VIMEO_TOKEN:
        required: true
      NEXT_DATOCMS_API_TOKEN:
        required: true
      MELI_TOKEN:
        required: true
jobs:
  build:
    name: Build application
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: "16"
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install --dev
      - name: Cache Next
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next/cache # [I]
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/*.js') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package.json') }}
      - name: "build"
        run: |
          npm run build
        env:
          NEXT_DATOCMS_API_TOKEN: ${{ secrets.NEXT_DATOCMS_API_TOKEN }}
          VIMEO_TOKEN: ${{ inputs.VIMEO_TOKEN }}
      - name: "publish"
        run: |
          npx -p "@getmeli/cli" meli upload ./out \
            --url "https://staging.random.studio" \
            --site "$MELI_SITE" \
            --token "$MELI_TOKEN" \
            --release "$GITHUB_SHA"
        env:
          MELI_TOKEN: ${{ secrets.MELI_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MELI_SITE: ${{ inputs.MELI_SITE }}
