.container {
	position: relative;
	width: 100%;
	height: 100%;

	overflow: hidden;

	// Should be disabled (removed when scrubbing - only set color and transition in non scrubbing progress
	// Will impact performance a lot otherwise
	transition: background-color 300ms ease-in-out;
	transition-delay: 150ms;
}

.backgroundGrid {
	position: absolute;
	width: 100%;
	height: 100%;
}

.grid {
	--columns: 8;
	--rows: 15;

	--cell-width: calc(var(--window-width) / var(--columns));
	--top-offset: calc(((var(--cell-width) * var(--rows)) - var(--window-height)) / 2);

	position: relative;
	display: grid;

	// Offset to have bottom and top of cells be symettrical
	top: calc(var(--top-offset) * -1px);

  	grid-template-columns: repeat(auto-fill, minmax(calc(100% / var(--columns)), 1fr));
	grid-auto-rows: 1fr;
	

	@media screen and (min-width: 480px) {
		// for desktop normal
		--columns: 7;
		--rows: 10;

		@media (orientation: landscape) {
			--columns: 10;
		}
	}
	
	@media screen and (min-width: 1280px) {
		--columns: 12;
	}
	
	// Widescreen
	@media screen and (min-width: 2160px) {
		--columns: 16;
	}

	&::before {
		content: '';
		width: 0;
		padding-bottom: 100%;
		grid-row: 1 / 1;
		grid-column: 1 / 1;
	}
}

.bgGrid {
	position: absolute;
	height: initial;
	width: 100%; 
	pointer-events: none;

	& > *:first-child {
		grid-row: 1 / 1;
		grid-column: 1 / 1;
	}

	& > * {
		// Preventing border stacking
		border-bottom: 1px rgba(255, 255, 255, 0.3) solid;
    	border-right: 1px rgba(255, 255, 255, 0.3) solid;
	}
}

.imageContainer {
	grid-row: 9 / 13;
    grid-column: 1 / 5;
	z-index: 9;
	
	@media screen and (min-width: 480px) {
		grid-row: 3 / 6;
		grid-column: 1 / 4;
		
		@media (orientation: landscape) {
			grid-row: 4 / 8;
			grid-column: 2 / 6;
		}
	}
	
	@media screen and (min-width: 1280px) {
		grid-column: 3 / 7;
	}
	
	@media screen and (min-width: 2160px) {
		grid-column: 5 / 9;
	}
}

.mapFocusContainer {
	position: relative;
	grid-row: 5/9;
    grid-column: 5/9;

	@media screen and (min-width: 480px) {
		grid-row: 5 / 9;
		grid-column: 4 / 8;

		@media (orientation: landscape) {
			grid-row: 4/8;
			grid-column: 6/10;
		}
	}
	
	@media screen and (min-width: 1280px) {
		grid-column: 7 / 11;
	}
	
	@media screen and (min-width: 2160px) {
		grid-column: 9 / 13;
	}
}

.crossHairContainer {
	span {
		position: absolute;
		left: 50%;
		top: 50%;
		transform: translate3d(-50%, -50%, 0);
		background-color: #fff;
	}
	
	span:first-of-type {
		height: 20%;
		width: 1px;
	}
	
	span:last-of-type {
		width: 20%;
		height: 1px;
	}
}

.coordinates {
	position: absolute;
	top: 51%;
	left: 51%;
	color: var(--white);
	user-select: none;

	p {
		font-family: var(--mono-font);
		font-size: 12px;
	}
}

.mapFocus {
	width: 100%;
	padding-top: 100%; /* 1:1 Aspect Ratio */

	// Crosshair spans
	span {
		position: absolute;
		left: 50%;
		top: 50%;
		transform: translate3d(-50%, -50%, 0);
		background-color: var(--white);
	}

	span:first-of-type {
		height: 30%;
		width: 1px;
	}

	span:last-of-type {
		width: 30%;
		height: 1px;
	}
}

.scrubber {
	position: absolute;
	bottom: 3rem;
	height: 20px;
	padding: 0 22px;


	@media screen and (min-width: 580px) {
		padding: 0 32px;
	}

	@media screen and (min-width: 1150px) {
		padding: 0 38px;
	}
}
