/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/Mainspace/models/Mainspace/mainspace.gltf -t --types --output src/models/Mainspace.tsx
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import {
  useGLTF,
  PerspectiveCamera,
  OrbitControls,
  Box,
} from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Cube032: THREE.Mesh;
    Floor: THREE.Mesh;
    ['Metal_H-Beam001']: THREE.Mesh;
    Desk_Studio007: THREE.Mesh;
    HMI_Aeron_Chair_B_Size_Fully_Adjustable_Arms029: THREE.Mesh;
    Runway_Wood005: THREE.Mesh;
    Plant_pots: THREE.Mesh;
    ID549002: THREE.Mesh;
    ID549002_1: THREE.Mesh;
    GILLIS250: THREE.Mesh;
  };
  materials: {
    ['default']: THREE.MeshStandardMaterial;
    ['Stone Terrazzo Venetian Matte White']: THREE.MeshStandardMaterial;
    Gray: THREE.MeshStandardMaterial;
    ['MDF Gray']: THREE.MeshStandardMaterial;
    SEAT_FABRIC: THREE.MeshStandardMaterial;
    ['Wood Fine Veneer Oak']: THREE.MeshStandardMaterial;
    adjustedWood: THREE.MeshStandardMaterial;
    ['Plaster Lime']: THREE.MeshStandardMaterial;
    ['Aluminium Brushed']: THREE.MeshStandardMaterial;
    ['Cork Surface']: THREE.MeshStandardMaterial;
  };
};

const Mainspace = (props: JSX.IntrinsicElements['group']) => {
  const { nodes, materials } = useGLTF(
    '/models/Mainspace/mainspace.gltf',
  ) as GLTFResult;

  materials['Stone Terrazzo Venetian Matte White'].metalness = 0;

  materials.adjustedWood = materials['Wood Fine Veneer Oak'].clone();
  materials.adjustedWood.map?.repeat.set(1, 1);

  return (
    <group {...props} dispose={null}>
      <PerspectiveCamera
        far={1000}
        fov={39.598}
        makeDefault
        near={0.1}
        position={[0.017, 1, -12.862]}
        rotation={[Math.PI / -1.05, 0.009, Math.PI]}
      />

      <Box
        args={[20, 1, 25]}
        castShadow
        material={materials['Stone Terrazzo Venetian Matte White']}
        position={[-1, -2.473, 3.442]}
        receiveShadow
        scale={[1, -1, 0.641]}
        visible={false}
      />

      <mesh
        geometry={nodes.Cube032.geometry}
        material={materials.default}
        position={[1.785, -1.555, 7.624]}
      />

      <mesh
        geometry={nodes['Metal_H-Beam001'].geometry}
        material={materials.Gray}
        position={[2.637, 0.275, 6.071]}
        visible={false}
      />

      <mesh
        geometry={nodes.Desk_Studio007.geometry}
        material={materials['MDF Gray']}
        position={[4.208, -1.228, 3.514]}
        rotation={[0, 1.571, 0]}
      />

      <mesh
        geometry={
          nodes.HMI_Aeron_Chair_B_Size_Fully_Adjustable_Arms029.geometry
        }
        material={materials.SEAT_FABRIC}
        position={[3.935, -1.485, 4.334]}
        rotation={[Math.PI / 2, 0, -1.082]}
        scale={0.025}
      />

      <mesh
        geometry={nodes.Runway_Wood005.geometry}
        material={materials.adjustedWood}
        position={[-0.287, -1.782, -0.986]}
        rotation={[0, -0.262, 0]}
      />

      <mesh
        geometry={nodes.Plant_pots.geometry}
        material={materials['Plaster Lime']}
        position={[0.206, -1.398, 4.521]}
      />

      <group position={[0.087, -0.94, 9.602]}>
        <mesh
          geometry={nodes.ID549002.geometry}
          material={materials['Aluminium Brushed']}
        />

        <mesh
          geometry={nodes.ID549002_1.geometry}
          material={materials['Cork Surface']}
        />
      </group>

      <instancedMesh
        args={[nodes.GILLIS250.geometry, materials['Wood Fine Veneer Oak'], 5]}
        instanceMatrix={nodes.GILLIS250.instanceMatrix}
      />
    </group>
  );
};

useGLTF.preload('/models/Mainspace/mainspace.gltf');
export default Mainspace;
