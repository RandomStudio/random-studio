/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/Mainspace/models/Mainspace/mainspace.gltf -t --types --output src/models/Mainspace.tsx
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF, PerspectiveCamera } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Cube032: THREE.Mesh;
    Cube055: THREE.Mesh;
    MeetingRoom_Stairs: THREE.Mesh;
    Floor: THREE.Mesh;
    Desk_Studio007: THREE.Mesh;
    Runway_Wood005: THREE.Mesh;
    Plant_pots: THREE.Mesh;
    ID549002: THREE.Mesh;
    ID549002_1: THREE.Mesh;
    GILLIS250: THREE.Mesh;
  };
  materials: {
    PaletteMaterial001: THREE.MeshStandardMaterial;
    PaletteMaterial002: THREE.MeshStandardMaterial;
    ['Fabric Linen']: THREE.MeshStandardMaterial;
    ['Stone Terrazzo Venetian Matte White']: THREE.MeshStandardMaterial;
    ['MDF Gray']: THREE.MeshStandardMaterial;
    ['Wood Fine Veneer Oak']: THREE.MeshStandardMaterial;
    ['Plaster Lime']: THREE.MeshStandardMaterial;
    ['Aluminium Brushed']: THREE.MeshStandardMaterial;
    ['Cork Surface']: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>
>;

const Mainspace = (props: JSX.IntrinsicElements['group']) => {
  const { nodes, materials } = useGLTF(
    '/models/Mainspace/mainspace.gltf',
  ) as GLTFResult;

  return (
    <group {...props} dispose={null}>
      <PerspectiveCamera
        far={1000}
        fov={39.598}
        makeDefault
        near={0.1}
        position={[0.017, -0.986, -5.862]}
        rotation={[-3.125, 0.009, -3.14]}
      />

      <mesh
        geometry={nodes.Cube032.geometry}
        material={materials.PaletteMaterial001}
        position={[1.732, -1.705, 8.972]}
      />

      <mesh
        geometry={nodes.Cube055.geometry}
        material={materials.PaletteMaterial002}
        position={[-7.423, 0.155, -3.03]}
      />

      <mesh
        geometry={nodes.MeetingRoom_Stairs.geometry}
        material={materials['Fabric Linen']}
        position={[-3.272, -1.347, -6.186]}
      />

      <mesh
        geometry={nodes.Floor.geometry}
        material={materials['Stone Terrazzo Venetian Matte White']}
        position={[2.786, -2.523, 5.132]}
        scale={[1, 1, 0.641]}
      />

      <mesh
        geometry={nodes.Desk_Studio007.geometry}
        material={materials['MDF Gray']}
        position={[4.155, -1.378, 4.861]}
        rotation={[0, 1.571, 0]}
      />

      <mesh
        geometry={nodes.Runway_Wood005.geometry}
        material={materials['Wood Fine Veneer Oak']}
        position={[-0.34, -1.932, 0.362]}
        rotation={[0, -0.262, 0]}
      />

      <mesh
        geometry={nodes.Plant_pots.geometry}
        material={materials['Plaster Lime']}
        position={[0.152, -1.548, 5.869]}
      />

      <group position={[0.033, -1.09, 10.95]}>
        <mesh
          geometry={nodes.ID549002.geometry}
          material={materials['Aluminium Brushed']}
        />

        <mesh
          geometry={nodes.ID549002_1.geometry}
          material={materials['Cork Surface']}
        />
      </group>

      <instancedMesh
        args={[nodes.GILLIS250.geometry, materials['Wood Fine Veneer Oak'], 5]}
        instanceMatrix={nodes.GILLIS250.instanceMatrix}
      />
    </group>
  );
};

useGLTF.preload('/models/Mainspace/mainspace.gltf');
export default Mainspace;
